const { sql } = require('../config/db-config');

const fixAdminNotificationsTable = async () => {
    try {
        console.log('üîß Admin bildirim tablosunu d√ºzeltiliyor...');

        // Eski tabloyu yedekle
        await sql`
            CREATE TABLE IF NOT EXISTS admin_notifications_backup AS 
            SELECT * FROM admin_notifications
        `;

        // Yeni tablo yapƒ±sƒ±nƒ± olu≈ütur
        await sql`
            DROP TABLE IF EXISTS admin_notifications CASCADE
        `;

        await sql`
            CREATE TABLE admin_notifications (
                id SERIAL PRIMARY KEY,
                title VARCHAR(255) NOT NULL,
                message TEXT NOT NULL,
                type VARCHAR(20) DEFAULT 'info' CHECK (type IN ('info', 'success', 'warning', 'error')),
                user_type VARCHAR(20) NOT NULL CHECK (user_type IN ('restaurant', 'courier')),
                user_id INTEGER NULL, -- NULL means broadcast to all users of that type
                is_read BOOLEAN DEFAULT false,
                data JSONB NULL, -- Extra data for the notification
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        `;

        console.log('‚úÖ Admin bildirim tablosu ba≈üarƒ±yla d√ºzeltildi.');

        // ƒ∞ndeks olu≈ütur
        await sql`
            CREATE INDEX IF NOT EXISTS idx_admin_notifications_user 
            ON admin_notifications(user_type, user_id, is_read, created_at DESC)
        `;

        await sql`
            CREATE INDEX IF NOT EXISTS idx_admin_notifications_unread 
            ON admin_notifications(user_type, is_read, created_at DESC)
        `;

        console.log('‚úÖ Admin bildirim tablosu indeksleri olu≈üturuldu.');

        // Test verisi ekle
        await sql`
            INSERT INTO admin_notifications (title, message, type, user_type, user_id, created_at, updated_at)
            VALUES 
            ('Ho≈ü Geldiniz!', 'Bildirim sistemi ba≈üarƒ±yla kuruldu.', 'success', 'courier', 1, NOW(), NOW()),
            ('Sistem Duyurusu', 'T√ºm kuryeler i√ßin √∂nemli duyuru.', 'info', 'courier', NULL, NOW(), NOW()),
            ('Restoran Bildirimi', 'Restoran i√ßin test bildirimi.', 'info', 'restaurant', 1, NOW(), NOW())
        `;

        console.log('‚úÖ Test bildirimleri eklendi.');

    } catch (error) {
        console.error('‚ùå Admin bildirim tablosu d√ºzeltilirken hata:', error);
        throw error;
    }
};

module.exports = fixAdminNotificationsTable; 